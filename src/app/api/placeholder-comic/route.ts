import { NextResponse } from 'next/server'

export async function GET() {
  // For now, we'll return a simple SVG placeholder
  // Later this will be replaced with actual generated comic images

  const svgContent = `
    <svg width="400" height="300" xmlns="http://www.w3.org/2000/svg">
      <rect width="400" height="300" fill="#f8fafc" stroke="#e2e8f0" stroke-width="2"/>

      <!-- Comic panel border -->
      <rect x="20" y="20" width="360" height="260" fill="white" stroke="#1e293b" stroke-width="3"/>

      <!-- Title -->
      <text x="200" y="50" text-anchor="middle" font-family="serif" font-size="16" font-weight="bold" fill="#1e293b">
        GENERATED COMIC
      </text>

      <!-- Simple character (politician) -->
      <circle cx="120" cy="150" r="30" fill="none" stroke="#1e293b" stroke-width="2"/>
      <circle cx="115" cy="145" r="2" fill="#1e293b"/>
      <circle cx="125" cy="145" r="2" fill="#1e293b"/>
      <path d="M 110 160 Q 120 170 130 160" stroke="#1e293b" stroke-width="2" fill="none"/>

      <!-- Body -->
      <rect x="100" y="180" width="40" height="60" fill="none" stroke="#1e293b" stroke-width="2"/>

      <!-- Speech bubble -->
      <ellipse cx="280" cy="120" rx="80" ry="40" fill="white" stroke="#1e293b" stroke-width="2"/>
      <polygon points="220,140 200,160 230,150" fill="white" stroke="#1e293b" stroke-width="2"/>

      <!-- Speech text -->
      <text x="280" y="115" text-anchor="middle" font-family="sans-serif" font-size="12" fill="#1e293b">
        "Promising"
      </text>
      <text x="280" y="130" text-anchor="middle" font-family="sans-serif" font-size="12" fill="#1e293b">
        "Healthcare..."
      </text>

      <!-- Ground line -->
      <line x1="40" y1="250" x2="360" y2="250" stroke="#1e293b" stroke-width="1"/>

      <!-- Watermark -->
      <text x="350" y="290" text-anchor="end" font-family="sans-serif" font-size="10" fill="#64748b">
        Generated by Mockr AI
      </text>
    </svg>
  `

  return new NextResponse(svgContent, {
    headers: {
      'Content-Type': 'image/svg+xml',
      'Cache-Control': 'no-cache'
    }
  })
}